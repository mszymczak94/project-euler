package com.szymczak.task2;

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 *  find the sum of the even-valued terms.
 */
public class Problem2 {
    // To be sure that this is work for all n possibilities it should be changed to BigInteger class instead of
    // using long.
    private static long getSumOfEvenFibonacciNumbersBelow(long n) {
        long n1 = 1;
        long n2 = 2;
        long temp = 0;
        long counter = 0;
        while (n2 <= n) {
            temp = n1 + n2;
            if (n2 % 2 == 0) {
                counter += n2;
            }
            n1 = n2;
            n2 = temp;
        }
        return counter;
    }

    public static void main(String[] args) {
        System.out.printf("Sum of even number below 4kk is %d: ", getSumOfEvenFibonacciNumbersBelow(4_000_000));
    }
}
